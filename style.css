/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    全体 / 共通クラス
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */
html {
    font-size: 100%;
  }
  body {
    font-family: "Arial", "Hiragino Sans", "Hiragino Kaku Gothic ProN", "Meiryo", sans-serif;
    font-size: 0.875rem;
    color: #2a2a2a;
  }
  a {
    text-decoration: none;
  }
  a:hover {
    opacity: 0.7;
  }
  img {
    max-width: 100%;
  }
  li {
    list-style: none;
  }

  /*中身のコンテンツの最大幅を設定し、共通で使用*/
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 5%;
  }

  /* h2の共通クラス */
  .sec-title {
    font-size: 1.5rem;
    margin-bottom: 20px;
  }

  /*ボタン　display:inline-blockを設定してpaddingでボタンに幅と高さを持たせる。*/
  .btn {
    color: #2a2a2a;
    border: solid 1px #2a2a2a;
    display: inline-block;
    font-size: 0.750rem;
    padding: 14px 36px;
    margin-top: 30px;
  }

  /* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    header
  ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */ 

  /*height:100vh メインビジュアルを画面の高さに合わせる。
  position:relative ロゴの位置を固定するため、親要素のpositionにrelativeを設定*/
  header {
    height: 100vh;
    background-image: url(https://code-jump.com/demo/html/store1/img/mainvisual.jpg);
    background-size: cover;
    background-position: center top;
    background-repeat: no-repeat;
    margin-bottom: 80px;
    position: relative;
  }

  /*ロゴ position: absoluteを設定してから、topとrightで位置を調整*/
  header .site-title {
    position: absolute;
    top: 30px;
    right: 30px;
  }

  /* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    main section-magazine
  ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */ 
  .magazine {
    text-align: center;
    margin-bottom: 80px;
  }

  /* 横並びに配置する */
  .magazine .flex-item {
    display: flex;
    justify-content: space-between;
    margin-top: 40px;
  }

  /* テキストを上に重ねるために、親要素のpositionにrelativeを設定 */
  .magazine .flex-item .item {
    width: 49%;
    position: relative;
  }

  /* 横並びに配置した画像の上に、positionで半透明のボックスを重ね、タイトルとテキストを記述。
    半透明はbackground-colorのrgbaの指定できる。position:absoluteを設定し、top、left、rightで位置を調整
    topで高さだけ指定。左右は0でよい。理由は max-width:290pxでmargin：0 autoを指定しているので左右にマージンが出来るから*/
.magazine .flex-item .item .text {
  max-width: 290px;
  color: #fff;
  font-weight: bold;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 15px 0;
  margin: 0 auto;
  position: absolute;
  top: 40px;
  left: 0;
  right: 0;
}

.maganine .flex-item .item .title {
  font-style: 1.25rem;
  margin-bottom: 2px;
}

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    main section-fashion
  ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */ 

  /* background-sizeで背景画像の表示サイズを指定。高さはブラウザ幅変更時に変化しないよう固定で設定 */
  .fashion {
    height: 520px;
    background-image: url(https://code-jump.com/demo/html/store1/img/fashion.jpg);
    background-size: cover;
    background-position: center top;
    background-repeat: no-repeat;
    text-align: center;
    padding-top: 60px;
    margin-bottom: 80px;
  }

  /* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    Catalog & Antique
  ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */ 

  .catalog-antique {
    background-color:  #f5f5f5;
    padding: 60px 0;
  }

  /* k2の共通クラスにはm~b20px付けているが「catalog-antiqueクラスの中のh2」にはm-b40px付ける */
  .catalog-antique .sec-title {
    margin-bottom: 40px;
  }
  .catalog-antique .flex-item {
    display: flex;
    justify-content: space-between;
    align-items: center;;
  }
  .catalog-antique .item {
    width: 48%;
    text-align: center;
  }
 .catalog-antique .item img {
  width: 100%;
 }
 .catalog-antique .item p {
  margin-bottom: 30px;
  text-align: left;
 }
 .catalog-antique .item p:last-child {
  margin-bottom: 0;
 }

 /* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    footer
  ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー----------ーーーーーーーーーーー */ 

  /* ロゴとテキストのエリアをdivタグで囲み、flexboxで横並びに配置 */
  footer {
    background-color: #333;
    font-style: 0.75rem;
  }

  /* 3つのitemを横に並べ、両端を揃える */
  footer .flex-item {
    display: flex;
    justify-content: space-between;
    color: #fff;
    /* クラスwrapperでpadding:0 5%で付けているので、ここでpadding:60px 0としてしまうとレイアウト崩れるので注意 */
    padding-top: 100px;
    padding-bottom: 100px;
  }
  
  /* ３列並んだitemの各横幅を設定。横幅100％を3列で分割 */
  footer .item {
    width: 33%;
    /* 行間を拡げる */
    line-height: 2;
  }

  /* 1つ目のitem（左端）のロゴの上下に余白を設ける */
  footer .item:first-child {
    padding: 60px 0;
  }

  /* 2つ目のitem（中央）のリスト行頭にラインを入れる。ラインとテキストの間に余白を設ける */
  footer .item li::before {
    content: "-";
    margin-left: 5px;
  }
  footer .item .title {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 10px;
  }
  footer .copyright {
    background-color: #fff;
    text-align: center;
    padding: 30px 0;
  }

/* ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    スマホ用レイアウト　　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　♦︎　
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー */

@media screen and (max-width: 896px) {  
    /* ーーーーーーーーーーーーーーーーーー
        Magazine　　♦︎　♦︎　♦︎　♦︎　♦︎　♦
    　ーーーーーーーーーーーーーーーーーーー */
    .magazine .flex-item {
      flex-direction: column;
    }
    .magazine .flex-item .item {
      width: 100%;
    }
    .magazine .flex-item .item:first-child {
      margin-top: 30px;
    }
    /* ーーーーーーーーーーーーーーーーーー
        Fashion　♦︎　♦︎　♦︎　♦︎　♦︎　♦　♦
    　ーーーーーーーーーーーーーーーーーーー */
    .fashion {
      padding-top: 35px;
      margin-bottom: 50px;
    }
     /* ーーーーーーーーーーーーーーーーーー
        Catalog & Antique　♦︎　♦︎　♦︎　♦　
    　ーーーーーーーーーーーーーーーーーーー */
    .catalog-antique {
      padding: 30px 0;
    }
    .catalog-antique .flex-item {
      flex-direction: column;
    }
    .catalog-antique .item {
      width: 100%;
    }
    .catalog-antique .item:first-child {
      margin-bottom: 60px;
    }
    /* ーーーーーーーーーーーーーーーーーー
       footer　♦︎　♦︎　♦︎　♦　
    ーーーーーーーーーーーーーーーーーーー */
    footer .flex-item {
      flex-direction: column;
      padding-top: 30px;
      padding-bottom: 30px;
    }
    footer .item {
      width: 100%;
      margin-bottom: 30px;
    }
    footer .item:first-child {
      text-align: center;
      padding: 0;
    }  
}